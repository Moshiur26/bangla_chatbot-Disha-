import datetime
import random
import time
import bangla
import re
import cosineSimilarity
import numpy as np
import logic.NER as ln
import variables.Variables as v
import variables.ConstantVariable as cv
import logic.identifySymptom as ls
import classification.classifier as cc
import logic.identifyBloodGroup as lbg
import logic.identifyAges as la
import logic.identifyBloodPressure as lbp
answer=""

def chat(user_input):

    ######### Working on NER #######
    if v.checker["name"]==False:
        #here NER
        if ln.ner(user_input)==True:
            return answer
        return '?????? ??? ???? ????? ?????? ??? ??? ???? ?????'

    ######### Working on Ages #######
    elif v.checker["age"]==False:
        if la.findAge(user_input)==True:
            return '??? ?????? ???? ?????? ???????? ????? ?????? ????? ?????'

        return '????? ??? ???? ????? ?????? ??? ??? ???? ?????'

    ######### Working on Blood Group #######
    elif v.checker["blood group"]==False:
        if lbg.findBloodGroup(user_input)==True:
            return '????? ????? ?????? ???? ?????? ????????\n?????? ?????? ??????? ???? ?????'

        return '????? ????? ????? ???? ????? ??????\n??? ??? ???? ?????'

    ######### Working on Blood Pressure #######
    #elif v.checker["blood pressure"]==False:
    if re.match(r"((^???? |^)(????? ???????|???????))", user_input):
        if re.match(r".*( ????$| ?????$| ??$| ???| ???$| ????$)", user_input):
            return "????? ????? ??????? "+v.info_map["blood pressure"]+" ?\n?????? ?? ?????? ??????? ???? ?????"
        if lbp.findBloodPressure(user_input)==True:
            return v.answer#'????? ??????? ?????? ???? ?????? ????????\n?????? ?????? ??????? ???? ?????'

        return '????? ????? ??????? ???? ????? ??????\n??? ??? ???? ?????'

    ######### Working on Symptom #######
    elif v.checker["symptom"]==False:


        if re.match(r"(^|.* )(??|???|???)( .*|$|?)", user_input):
            if v.symptom_counter>=3:
                v.checker["symptom"]=True
                return '???? ????? ?? ??????? ???? ?????? ???????? [Cardiologis] ??????? ?????? ??????\n?????? ?? ?????? ??????? ???? ?????' ##classification is perform here
            return '?????? ???????? ????? ?????? ???? ???? ?????? ???? ?????? ??????? ???? ??????'

        if ls.similarity(user_input)==True:
            if v.symptom_counter>=3:
                return answer+"??? ???? ?????? ????? ?????? ?? ????? ?? ?????"
            return '?????? ?????? ????'


        if v.symptom_counter>=3:
            return '??? ????? ?????? ?? ????? ?? ?????'

        return '????? ???????? ???? ????? ?????? ?????? ???? ?????? ????'


    ######### Working on Symtops #######
    if re.match(r"(^|.* )(????|??????|???????|???????|????????|??? ???)(.*|$|?)", user_input):
        #v.symptomMatrix=np.zeros([1,132])
        if v.checker["already identify disease"]==True:
            return "???? ?????? ?? ???????? ??????? ???????  ?????? ??? ???? ???? ??? ??? ????? ?????? ???? ??? ???? ????? ???? ??? ??? ?????\n?????? ?? ?????? ??????? ???? ?????"
        v.checker["symptom"]=False
        return "????? ?????? ???? ?? ?? ??? ????\n????? ???? ?????? ??? ??? ????????? ???? ?????"


    if re.match(r"???? ???( ????| ??| ?)", user_input):
        return "????? ??? "+v.info_map["name"]+" ?\n?????? ?? ?????? ??????? ???? ?????"
    elif re.match(r"???? ???( ????| ??| ?)", user_input):
        return "????? ??? "+v.info_map["age"]+" ??? ?\n?????? ?? ?????? ??????? ???? ?????"
    elif re.match(r"???? ????? ?????( ????| ??| ?)", user_input):
        return "????? ????? ????? "+v.info_map["blood group"]+" ?\n?????? ?? ?????? ??????? ???? ?????"
    #elif re.match(r"???? ????? ???????( ????| ??| ?)", user_input):
     #   return "????? ????? ??????? "+v.info_map["blood pressure"]+" ?\n?????? ?? ?????? ??????? ???? ?????"
    elif re.match(r"???? (??????? |??? |??????? |?????? | )???? ???(?|$)", user_input):
        return "??? : "+v.info_map["name"]+"\n??? : "+v.info_map["age"]+"\n????? ????? : "+v.info_map["blood group"]+"\n????? ??????? : "+v.info_map["blood pressure"] +"\n?????? ?? ?????? ??????? ???? ?????"

    if re.match(r"???? ???? ??? ?????? ????( *|$)", user_input) or re.match(r"(^|^???? )??? ?????? ????( *|$|?)", user_input):
        v.symptomMatrix=np.zeros([1,132])
        v.symptom_counter=0
        v.checker["symptom"]=False
        return "????? ?????? ???? ?? ?? ??? ????\n????? ???? ?????? ??? ??? ????????? ???? ?????"


    #if user_input in ['*???????*', '?????? ???????']:
     #   return '?????? ?????? ??????? ???? ?????\n'
    if re.match(r"[\u0980-\u09FF? ]*???????[\u0980-\u09FF? ]*", user_input):
        return ('?????? ?? ?????? ??????? ???? ?????')

    elif user_input in ['???']:
        return '???\n?????? ?????? ??????? ???? ?????\n'




######### Working for Name #######

    elif re.match(r"(^|.* )???( .*|$)", user_input):
        if re.match(r"(^|.* )(?????|?????|?????|???|??)( .*|$|/?)", user_input) :
            return '???? ??? ???????, ????? ???? ????? Team-Explore.\n?????? ?????? ??????? ???? ?????\n'
        else:
            return "NR area"



    elif re.match(r"(^|.* )(????|????|???) ??( .*|$|/?)",user_input) :
        return '???? ??? ???????, ????? ???? ????? Team-Explore.\n?????? ?????? ??????? ???? ?????\n'
    #??? ???? ????? ?????? ?? ?????

    elif re.match(r"(^|.* )?? (????|????|???)( .*|$|/?)",user_input) :
        return '???? ??? ???????, ????? ???? ????? Team-Explore.\n?????? ?????? ??????? ???? ?????\n'


    elif re.match(r"(^|.* )(???|????????) ??( .*|$|/?)", user_input):
        return '???? ??? ??????? ???????? ?????  ???? ?\n'

    #elif user_input in ['????? ??? ??', '????? ???????? ??']:
        #return '???? ??? ??????? ???????? ?????  ???? ?\n'

    elif re.match(r"(^|.* )?? (??|????|??????)( .*|$|/?)", user_input):
        return '??? ????? ???? ????? ????? ???? ?? ??? ?\n'

    #elif user_input in ['???? ?? ??', '??? ?? ????', '?? ????', '?? ???? ???']:
     #   return '??? ????? ???? ????? ????? ???? ?? ??? ?\n'

    elif re.match(r".* (????|???|??????|)(?|$|,)", user_input):
        return '???? ???? ??????\n?????? ?????? ??????? ???? ?????\n'

    #elif user_input in ['???? ????? ???? ????? ????', '???? ????? ???? ????? ????', '????? ????']:
        #return '???? ???? ?????? ????? ???? ???? ???? ????? ????? ???? ?\n'

    elif user_input in ['???', '?????', '??? ?????', '??? ?????']:
        return '?????? ???????? ??? ????? ?????? ?? ?????? ???????? ???? ?????\n'

    elif user_input in ['??? ????', '??? ????', '???? ?? ?? ???? ?????? ?']:
        return '????? ???? ?????? ?????? ??????? ???? ?????\n'

    elif user_input in ['???? ?? ???','???? ?? ???? ?????? ??','????? ????????? ????? ??','???? ?? ?????? ?? ???? ????']:
         return '?????? ??? ???? ????? ???? ?????????, ?? ???? ?????? ? ??? ????????? "RAM" ???? ???? ???????? ????? ?\n'

    elif user_input in ['??? ????', '??? ????', '???? ?? ?? ???? ?????? ?']:
         return '????? ???? ?????? ?????? ??????? ???? ?????\n'

    elif user_input in ['?? ?? ???', '?? ???', '???? ?? ???']:
        day = datetime.date.today()
        day_no = day.weekday()
        if day_no == 0:
            return '?? ??????\n'
        elif day_no == 1:
            return '?? ????????\n'
        elif day_no == 2:
            return '?? ??????\n'
        elif day_no == 3:
            return '?? ???????????\n'
        elif day_no == 4:
            return '?? ????????\n'
        elif day_no == 5:
            return '?? ??????\n'
        elif day_no == 6:
            return '?? ??????\n'

    elif user_input in ["???? ??? ???", "???? ??? ????", "??? ??? ???", "??? ??? ????", "??? ???", "??? ???? ????",
                        "??? ???? ????"]:
        now = datetime.datetime.now()
        current_year_time = now.strftime("%Y-%m-%d %H:%M")
        bangla_current_year_time = bangla.convert_english_digit_to_bangla_digit(current_year_time)
        return "???= " + bangla_current_year_time + " = ???\n"

    elif re.match(r"(^|.* )???? (??|???|????|????)( .*|$|/?)", user_input) :#or re.match(r"(^|.* )??? (??|???|????|????)( .*|$|/?)", user_input) or re.match(r"(^|.* )??? ??( .*|$|/?)",user_input) :
        return '??? ??? ???? \n???? ???? ?????'

    #elif re.match(r"(^|.* )???( ???.*|$| ?| ,| ;|?|,|;)", user_input) :
        #return '??? ??? ???? \n???? ???? ?????'
    elif re.match(r"(^|.* )???( .*|???|$)", user_input) :
        if re.match(r"(^|.* )(??|???)( .*|$)", user_input) :
            return '?????? ?\n?????? ?????? ??????? ???? ?????\n?'
        return '???? ???? ????? \n?????? ?????? ??????? ???? ?????\n'

    #elif user_input in ['???? ???? ??', '???? ???', '???? ???? ????', '??? ???', '?? ???', '???? ????']:
     #   return '??? ??? ???? ???? ???? ??? ?\n'

    #elif user_input in ['???? ???', '????']:
     #   return '???? ???? ????? ?????? ?????? ??????? ???? ???? ?\n'

    elif user_input in ['???? ?? ?????']:
        return '??? ??? ????????? ???????\n'

    elif user_input in ['??? ??', '????? ??? ??', '????? ??? ??', '??? ??? ???']:
        return '???? ???? ??? ?? ?? ?????????? \n'

    elif user_input in ['???? ???? ?? ????', '???? ?? ????', '???? ?? ????', '??? ?? ????', '??? ?? ????']:
        return '??? ???? ????????\n'

    elif user_input in ['??? ?????', '???? ?????', '???', ]:
        return "??? ????? ??? ????, ??? ???? ???? ???? ?????? ??? ??? ???? ??????\n"

    elif user_input in ['?? ?? ???? ????? ?????', '??? ??? ??', '?? ?? ??? ?????']:
        return "Team-Explore ?????? ???? ????? ??? ?????? ?????\n"

    elif user_input in ['???? ?? ????', '???? ??']:
        return '??? ???? ????????\n'

    elif user_input in ['???? ????? ???', '????? ???? ??', '????? ?????? ??']:
        return '??? ????????? ????????? ? ????\n'

    elif user_input in ['exit', '??? ??????', '?????', '??????????']:
        return '??????\n'

    elif user_input in ['??? ??', '??? ?? ????? ???? ??? ???? ??? ??', '????? ??? ???']:
        return '???? ???????\n'

    ###############

    elif user_input in ['??????? ??????? ???? ???? ???? ', '??????? ???? ???? ????  ',  '??????? ????? ??????? ???? ????' ]:
        return '?????? ??????? \n?????? ?????? ??????? ???? ?????\n'
    elif user_input in [ '??????? ????', '??????? ???? ??????? ???', '??????? ???? ??????? ????? ', '????????? ??????? ?????? ']:
        return '?????? ??????? \n?????? ?????? ??????? ???? ?????\n'

    elif user_input in [ '????????? ??????? ???? ??', '??????? ???? ??????? ??? ??', '??????? ???? ??????? ?????', '????????? ??????? ?????? ???? ????? ' ]:
            return '????? ???????? ????????? ???? ????? ??? ??? ? \n?????? ?????? ??????? ???? ?????\n'

    elif user_input in [ '??????? ????? ?? ??? ??????', '????????? ???? ??? ???? ????', '??????? ????? ?????', '??????? ???? ??? ??? ' ]:
            return '????? ???????? ????????? ???? ????? ??? ??? ? \n?????? ?????? ??????? ???? ?????\n'

    elif user_input in [ '????????? ?? ????? ???? ', '??????? ????????', '??????? ????? ?????', '??????? ???? ??? ??? ',   '??????? ??? ?????',  '???? ??',  '??????? ???? ??',  '??????? ???? ???? ???']:
            return '????? ???????? ????????? ???? ????? ??? ??? ? \n?????? ?????? ??????? ???? ?????\n'

    elif user_input in [ '??????? ?? ????? ???? ', '?????????? ?? ???? ????', '???????? ???? ??', '??????? ???? ??']:
            return '????? ???????? ????????? ???? ????? ??? ??? ? \n?????? ?????? ??????? ???? ?????\n'


    elif user_input in [ '??????? ?????? ?? ?? ??????? ??? ???', '??????? ?????? ?? ?? ????? ??? ??? ', '??? ????? ????? ????? ???']:
            return '?????? ???????????? ???? ???? ?????? \n???????????????( ECHOCARDIOGRAM ) \n?? ?? ??( USG ) \n?? ?? ??( MRI ) \n???????????( CLONOSCOPY ) \n? ?? ??( ECG ) \n???????????( ENDOSCOPY ) \n??????( XRAY ) \n???? ???????( CT SCAN  ) \n? ? ?( EEG ) \n?????? ??????( DENTAL XRAY ) ?????? ?? ????? ???? ???? ??? ??????? ??? ??? ????????? ??????? ???? \n?????? ?????? ??????? ???? ?????\n'

    elif user_input in ['??????????????? ??? ???? ??????', '??????????????? ??????? ?????', '??????????????? ?????? ??????? ?????' , '??????? ????????????? ???', '????????????? ???? ???', '??????????????? ???? ????', '??????????????? ???? ???']:
        return '??? ??? ??? ????????? ??????? ???? ???? ??????????? ?? ?????? ???????? ??????? ????? \n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in ['??? ???????? ?????', '??? ???????? ????']:
        return '???? ?????? ??? \n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in ['????? ??? ?????', '????? ??? ?????', '??? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????']:
        return '???? ?????? ??? \n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in ['????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????']:
            return '???? ? ????? ??? \n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in ['????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????']:
            return '???? ? ????? ??? \n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in ['????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????']:
            return '???? ?????? ??? \n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in ['????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????', '????? ??? ?????']:
            return '???? ?????? ??? \n?????? ?? ?????? ??????? ???? ?????\n'


    elif user_input in ['????? ?? ?????', '????? ?? ????', '????? ?? ???? ?????? ????? ?? ?????', '????? ?? ?? ???? ????? ?????????', '????? ??? ???? ???', '????? ???? ???']:
            return '?????? ????? ????? ???? ????? ????, ???? ? ???? ???? \n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in ['???????? ??? ???? ????', '???????? ??? ???? ???', '???????? ??? ???? ??', '??????? ??? ???? ??', '??????? ??? ???? ???']:
            return '?????? ?? ?????? ???? ????? \n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in ['???????? ??? ??????', '???????? ??? ?????', '???????? ??? ???? ????', '???????? ??? ???? ??', '???????? ??? ???? ???']:
            return '???? ? ?? ???? ??? ?? ?? ??????? ???? ????? \n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in ['??? ???? ??????? ???? ??? ?????', '??? ???? ??????? ???? ??? ????', '??????? ??? ?????', '??????? ??? ?????', '??????? ????? ?????', '??????? ????? ????']:
            return '??????? ???????? ???? ???? ??? ????????? ??????? ????\n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in ['??? ????????? ??????? ???? ????', '??? ????????? ??????? ???? ???', '??? ??????? ?????? ????', '??? ??????? ?????? ???', '????????? ??????? ????? ????', '????????? ??????? ????? ???','????????? ??????? ???? ????','????????? ??????? ???? ???','????????? ??????? ??? ??????','????????? ??????? ??? ?????']:
            return '????????? ????????? ???? ??? ????????? ??????? ????\n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in ['????????? ????? ????? ????', '????????? ????? ????? ???', '???????? ????? ????? ????', '???????? ????? ????? ???', '????? ?????? ????? ??????', '????? ?????? ????? ?????','????? ?????? ????? ?????']:
            return '?????? ????? ?????? ???? ??? ????????? ??????? ????\n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in ['??????? ??? ?????', '??????? ??? ????', '??????? ??? ?????', '??????? ??? ????', '??????? ????? ?????', '??????? ????? ????','??????? ??? ?????','??????? ??? ????']:
            return '??????? ????????? ?????? ????? ????  ??? ????????? ??????? ????\n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in ['????? ????? ?? ??? ??????', '????? ????? ?? ??? ?????', '??????? ??? ?????', '??????? ??? ????']:
            return '????  ??? ????????? ??????? ????\n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in ['????? ????? ?? ??? ??????', '????? ????? ?? ??? ?????', '??????? ??? ?????', '??????? ??? ????']:
            return '????  ??? ????????? ??????? ????\n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in [ '?? ?? ?? ????? ????? ?? ???? ??????', '?? ?? ?? ????? ????? ?? ???? ?????', 'USG ????? ????? ?? ???? ?????' , 'USG ????? ????? ?? ???? ??????']:
            return '????  ??? ????????? ??????? ????\n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in [ '?? ?? ?? ???? ?? ???? ??????', '?? ?? ?? ????? ????? ?? ???? ??????' , '?? ?? ?? ????? ????? ?? ???? ?????', 'MRI ????? ????? ?? ???? ?????' , 'MRI ????? ???? ?? ???? ??????']:
            return '????  ??? ????????? ??????? ????\n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in [ '??????????? ???? ?? ???? ??????', '??????????? ????? ????? ?? ???? ??????' , '??????????? ????? ????? ?? ???? ?????', 'CLONOSCOPY ????? ????? ?? ???? ?????' , 'CLONOSCOPY ????? ???? ?? ???? ??????']:
            return '????  ??? ????????? ??????? ????\n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in [ '? ?? ?? ???? ?? ???? ??????', '? ?? ?? ????? ????? ?? ???? ??????' , '? ?? ?? ????? ????? ?? ???? ?????', 'ECG ????? ????? ?? ???? ?????' , 'ECG ????? ???? ?? ???? ??????']:
            return '????  ??? ????????? ??????? ????\n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in [ '??????????? ???? ?? ???? ??????', '??????????? ????? ????? ?? ???? ??????' , '??????????? ????? ????? ?? ???? ?????', 'ENDOSCOPY ????? ????? ?? ???? ?????' , 'ENDOSCOPY ????? ???? ?? ???? ??????']:
            return '????  ??? ????????? ??????? ????\n?????? ?? ?????? ??????? ???? ?????\n'



    elif user_input in [ '?????? ???? ?? ???? ??????', '?????? ????? ????? ?? ???? ??????' , '?????? ????? ????? ?? ???? ?????', 'XRAY ????? ????? ?? ???? ?????' , 'XRAY ????? ???? ?? ???? ??????']:
            return '????  ??? ????????? ??????? ????\n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in [ '???? ??????? ???? ?? ???? ??????', '???? ??????? ????? ????? ?? ???? ??????' , '???? ??????? ????? ????? ?? ???? ?????', 'CT SCAN ????? ????? ?? ???? ?????' , 'CT SCAN ????? ???? ?? ???? ??????']:
            return '????  ??? ????????? ??????? ????\n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in [ '? ? ? ???? ?? ???? ??????', '? ? ? ????? ????? ?? ???? ??????' , '? ? ? ????? ????? ?? ???? ?????', 'EEG ????? ????? ?? ???? ?????' , 'EEG ????? ???? ?? ???? ??????']:
            return '????  ??? ????????? ??????? ????\n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in [ '?????? ?????? ???? ?? ???? ??????', '?????? ?????? ????? ????? ?? ???? ??????' , '?????? ?????? ????? ????? ?? ???? ?????', 'DENTAL XRAY ????? ????? ?? ???? ?????' , 'DENTAL XRAY ????? ???? ?? ???? ??????']:
            return '????  ??? ????????? ??????? ????\n?????? ?? ?????? ??????? ???? ?????\n'

    elif user_input in [ '????? ??????? ?? ???????? ????? ????', '????? ??????? ?? ???????? ????? ???' , '????? ?????? ????????? ???', '????? ??? ????????? ???' , '??????? ?????? ????????? ???']:
            return '?????? ?? ???? ??????? ?????-??????\n?????? ?? ?????? ??????? ???? ?????\n'


    ##############

    else:
        rand = random.randint(0, 4)

        if rand == 0:
            return '??????? ????? ???? ??? ???? ??? ??????? ?????\n'

        elif rand == 1:
            return '??????? ????? ??? ???? ???? ? ??????? ??????? ????\n'

        elif rand == 2:
            return '?????? ? ??????? ??????? ????\n'

        elif rand == 3:
            return '?????? ? ???? ????????? ????? ??? ??????? ? ??????? ????? ???? ??? ??????? ???? ?\n'

        else:
            return '?????? ? ???? ???? ????? ?? ?????  ? ??????? ????? ???? ???? ??????? ?????\n'
